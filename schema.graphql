### Parties ###
type Party {
  id: String
  title: String
  description: String
  location: String
  date: String
  participants(limit: Int, nextToken: String): Participants
  tasks(limit: Int, nextToken: String): Tasks
}

input CreateParty {
  title: String
  description: String
  location: String
  date: String
}

input UpdateParty {
  id: String!
  title: String
  description: String
  location: String
  date: String
}

### Participants ###
type Participant {
  partyId: String
  id: String
  name: String
  email: String
  invitationSent: Boolean
}

input CreateParticipant {
  partyId: String!
  name: String
  email: String
  invitationSent: Boolean
}

input UpdateParticipant {
  partyId: String!
  id: String!
  name: String
  email: String
  invitationSent: Boolean
}

type Participants {
  items: [Participant]
  nextToken: String
}

### Tasks ###
type Task {
  partyId: String
  id: String
  title: String
  description: String
  status: TaskStatus
  assignee: Participant
}

input CreateTask {
  partyId: String!
  assigneeId: String
  title: String
  description: String
  status: TaskStatus
}

input UpdateTask {
  partyId: String!
  id: String!
  name: String
  email: String
  invitationSent: Boolean
}

type Tasks {
  items: [Task]
  nextToken: String
}

enum TaskStatus {
  TODO
  PENDING
  DONE
}

### Queries and Mutations ###
type Query {
  getParty(id: String!): Party
  getParticipant(partyId: String!, id: String!): Participant
  getParticipants(
    partyId: String!
    limit: Int
    nextToken: String
  ): Participants
  getTask(partyId: String!, id: String!): Task
  getTasks(
    partyId: String!
    limit: Int
    nextToken: String
  ): Tasks
}

type Mutation {
  createParty(args: CreateParty!): Party
  updateParty(args: UpdateParty!): Party
  deleteParty(id: String!): Party
  createParticipant(args: CreateParticipant!): Participant
  updateParticipant(args: UpdateParticipant!): Participant
  deleteParticipant(partyId: String!, id: String!): Participant
  createTask(args: CreateTask!): Task
  updateTask(args: UpdateTask!): Task
  deleteTask(partyId: String!, id: String!): Task
}

type Subscription {
  updatedParty(id: String!): Party
  @aws_subscribe(mutations: ["updateParty"])

  createdParticipant(partyId: String!): Participant
  @aws_subscribe(mutations: ["createParticipant"])
  updatedParticipant(partyId: String!): Participant
  @aws_subscribe(mutations: ["updateParticipant"])
  deletedParticipant(partyId: String!): Participant
  @aws_subscribe(mutations: ["deleteParticipant"])

  createdTask(partyId: String!): Task
  @aws_subscribe(mutations: ["createTask"])
  updatedTask(partyId: String!): Task
  @aws_subscribe(mutations: ["updateTask"])
  deletedTask(partyId: String!): Task
  @aws_subscribe(mutations: ["deleteTask"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
